kind: Deployment
apiVersion: apps/v1
metadata:
  name: cra
  namespace: cra
  labels:
    app: cra
    app.kubernetes.io/part-of: Anti-Virus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cra
  template:
    metadata:
      labels:
        app: cra
    spec:
      volumes:
        - name: cra-cert
          secret:
            secretName: cra-cert
            defaultMode: 420
        - name: clamav-config
          configMap:
            name: clamav
            defaultMode: 420
        - name: var-spool
          emptyDir: {}
        - name: usr-local-share-clamav
          emptyDir: {}
        - name: var-tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      containers:
        - name: clamav-rest-api
          image: 'docker.io/levindecaro/clamav-rest-api:v0.11'
          env:
            - name: APP_USER
              valueFrom:
                secretKeyRef:
                  name: cra-secret
                  key: APP_USER
            - name: APP_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cra-secret
                  key: APP_USER_PASSWORD
            - name: APP_PORT
              value: '19443'
            - name: APP_MAX_FILE_SIZE
              value: '251658240'
            - name: APP_FORM_KEY
              value: FILES
            - name: CLAMD_TIMEOUT
              value: '900000'
            - name: SRV_TIMEOUT
              value: '900000'
            - name: UNIX_SOCKET_MODE
              value: 'true'
            - name: CLAMD_PORT
              value: '3310'
            - name: APP_MAX_FILES_NUMBER
              value: '4'
            - name: CERT_PATH
              value: /opt/clamav-rest-api/private/cert.pem
            - name: KEY_PATH
              value: /opt/clamav-rest-api/private/key.pem
            - name: CLAMD_IP
              value: 127.0.0.1
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: cra-cert
              readOnly: true
              mountPath: /opt/clamav-rest-api/private
            - name: var-run
              mountPath: /var/run
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: clamav
          image: 'docker.io/levindecaro/clamav:v0.7'
          resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: var-spool
              mountPath: /var/spool/clamav/
            - name: clamav-config
              mountPath: /usr/local/etc
            - name: var-tmp
              mountPath: /var/tmp
            - name: var-run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp
            - name: usr-local-share-clamav
              mountPath: /usr/local/share/clamav/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          name: freshclam
          command:
            - /usr/local/sbin/freshclam.sh
          imagePullPolicy: Always
          volumeMounts:
            - name: clamav-config
              mountPath: /usr/local/etc
            - name: var-tmp
              mountPath: /var/tmp
            - name: var-run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp
            - name: usr-local-share-clamav
              mountPath: /usr/local/share/clamav/
          terminationMessagePolicy: File
          image: 'docker.io/levindecaro/clamav:v0.7'
          args:
            - '14400'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
